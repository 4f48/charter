name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Check formatting and lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libfreetype6-dev libfontconfig1-dev libudev-dev tree
      - name: Check formatting
        run: cargo fmt --all --check --verbose
      - name: Run Clippy
        run: cargo clippy --verbose
  build:
    name: Build
    needs: check
    permissions:
      id-token: write
      attestations: write
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: msvc-x86_64
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libfreetype6-dev libfontconfig1-dev libudev-dev
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - uses: Swatinem/rust-cache@v2
      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: charter-${{ matrix.artifact_name }}
          path: |
            target/${{ matrix.target }}/release/*.exe
            target/${{ matrix.target }}/release/*.dll
            target/${{ matrix.target }}/release/*
            !target/${{ matrix.target }}/release/deps
            !target/${{ matrix.target }}/release/build
            !target/${{ matrix.target }}/release/.fingerprint
      - name: Provenance
        run: tree
        uses: actions/attest-build-provenance@v2
        if: runner.os == 'Linux'
        with:
          subject-path: ${{ github.workspace }}/target/release/charter
